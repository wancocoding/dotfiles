# ============ 2020-11-03 ============
export EDITOR="vim"

# ====== My Environment ======
eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

if type brew &>/dev/null; then
  HOMEBREW_PREFIX="$(brew --prefix)"
  if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
    source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
  else
    for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
      [[ -r "$COMPLETION" ]] && source "$COMPLETION"
    done
  fi
fi
export HOMEBREW_AUTO_UPDATE_SECS=3600
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/linuxbrew-bottles
# ====== user apps path settings ======
export PATH=$HOME/apps/bin:$HOME/.dotfiles/sbin:$PATH


# ====== NVM settings ======
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
export NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node
# ====== pyenv settings ======
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi
# ====== golang settings ======
export GOPATH=$HOME/develop/Go
export GO111MODULE=on
export GOPROXY=https://goproxy.cn,direct
export PATH="$PATH:$GOPATH/bin"
# ====== java settings ======
export JAVA_HOME=/home/vincent/apps/jdk-15.0.1
export PATH=$PATH:$JAVA_HOME/bin
# ====== gradle settings ======
export GRADLE_HOME=/home/vincent/apps/gradle-6.7
export PATH=$PATH:$GRADLE_HOME/bin
# ====== rvm settings ======
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# ================= fzf =================
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ================= FZF Settings =================
# export FZF_BASE=$(brew --prefix)/opt/fzf
# fd settings
export FD_OPTIONS="--follow --exclude .git --exclude node_modules"
# -1 auto select the only match
export FZF_DEFAULT_OPTS="--no-mouse --border --height 50% -1 --reverse --multi --inline-info --preview='[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -300' --preview-window='right:hidden:wrap' --bind='f3:execute(bat --style=numbers {} || less -f {}),f2:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-a:select-all+accept,ctrl-y:execute-silent(echo {+} | xclip -i -sel clip)'"

export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!{.git,node_modules}/*" 2>/dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="rg --sort-files --files --null 2>/dev/null | xargs -0 dirname | uniq"

export BAT_PAGER="less -R"
